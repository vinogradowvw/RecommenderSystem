name: CI/CD Recommender System

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12.4
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.4"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        python -m unittest discover -s tests -p "*.py"

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Build and Start Containers
      run: |
        docker compose up --build -d --force-recreate --remove-orphans

    - name: Wait for Services to Start
      run: |
        sleep 20  # Add delay to allow all services to initialize

    - name: Start the Application with Hypercorn
      run: |
        hypercorn recsysMicroservice.App:app
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
        - build-test
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Copy docker-compose file to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yaml"
          target: "market_place"
  
      - name: Start services
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd market_place
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest backend/app:latest
            docker compose up -d --force-recreate
            docker image prune -f
